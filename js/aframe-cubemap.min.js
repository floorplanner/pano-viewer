(function(e){var a={};function r(n){if(a[n])return a[n].exports;var t=a[n]={exports:{},id:n,loaded:false};e[n].call(t.exports,t,t.exports,r);t.loaded=true;return t.exports}r.m=e;r.c=a;r.p="";return r(0)})([function(e,a){if(typeof AFRAME==="undefined"){throw new Error("Component attempted to register before AFRAME was available.")}AFRAME.registerComponent("cubemap",{schema:{folder:{type:"string"},edgeLength:{type:"int",default:5e3},nameMap:{type:"string"}},init:function(){var e=this.el;var a=this.data;var r=a.folder;var n;var t=[];var o=["posx","negx","posy","negy","posz","negz"];var s={posx:"posx",negx:"negx",posy:"posy",negy:"negy",posz:"posz",negz:"negz"};if(a.nameMap){name_map_array=a.nameMap.split(" ");for(var p=0,i=name_map_array.length;p<i;p++){name_map=name_map_array[p].split("=");s[name_map[0]]=name_map[1]}}for(var m=0,d=o.length;m<d;m++){t[m]=s[o[m]]+".jpg"}var f=new THREE.CubeTextureLoader;f.setPath(r);f.setCrossOrigin("anonymous");var g=f.load(t);g.format=THREE.RGBFormat;var v=THREE.ShaderLib["cube"];var u=new THREE.ShaderMaterial({fragmentShader:v.fragmentShader,vertexShader:v.vertexShader,uniforms:v.uniforms,depthWrite:false,side:THREE.BackSide});var l=u.clone();l.uniforms["tCube"].value=g;var h=a.edgeLength;var E=new THREE.CubeGeometry(h,h,h);e.setObject3D("mesh",new THREE.Mesh(E,l))}})}]);
